# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type courierSheet {
  id: Int!
  userId: String!
  status: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  sheetOrders: [sheetOrder!]!
  user: user!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type sheetOrderStatusHistory {
  id: Int!
  sheetOrderId: Int!
  status: Int!
  description: String!
  userId: String!
  createdAt: Timestamp!
  sheetOrder: sheetOrder!
  user: user!
}

type sheetOrder {
  id: Int!
  sheetId: Int!
  orderId: Int!
  transactionId: Int!
  createdAt: Timestamp!
  sheet: courierSheet!
  order: order!
  sheetOrderStatusHistory: [sheetOrderStatusHistory!]!
}

type orderStatus {
  id: Int!
  orderId: Int!
  status: Int!
  description: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  order: order!
}

type orderItem {
  orderId: Int!
  itemSku: String!
  count: Int!
  frozenPrice: String
  frozenCurrency: String
  partial: Boolean!
  partialCount: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  order: order!
  item: item!
}

type orderRelation {
  firstOrderId: Int!
  secondOrderId: Int!
  createdAt: Timestamp!
  firstOrder: order!
  secondOrder: order!
}

type order {
  id: Int!
  otherId: Int!
  type: Int!
  paymentType: Int!
  userId: String!
  merchantId: Int!
  userAddressId: Int!
  shippingPrice: Int!
  includesVat: Boolean!
  canOpen: Boolean!
  fragile: Boolean!
  deliveryPart: Boolean!
  createdAt: Timestamp!
  lastModified: Timestamp!
  sheetOrders: [sheetOrder!]!
  orderStatuses: [orderStatus!]!
  orderItems: [orderItem!]!
  user: user!
  merchant: merchant!
  userAddress: userAddress!
  orderRelations: [orderRelation!]!
  orderRelations2: [orderRelation!]!
}

type userAddress {
  id: Int!
  userId: String!
  countryId: Int!
  cityId: Int!
  details: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  user: user!
  orders: [order!]!
}

type financalRequestStatus {
  requestId: Int!
  status: Int!
  createdAt: Timestamp!
  request: financialTransaction!
}

type financialTransaction {
  id: Int!
  type: Int!
  description: String!
  fromAccountId: String!
  toAccountId: String!
  amount: Int!
  receipt: String!
  latestStatus: Int!
  approvedById: String!
  createdAt: Timestamp!
  fromAccount: financialAccount!
  toAccount: financialAccount!
  approvedBy: user!
  financialRequestStatus: financalRequestStatus!
}

type requestStatusHistory {
  id: Int!
  requestId: Int!
  status: Int!
  userId: Int!
  createdAt: Timestamp!
  request: request!
}

type request {
  id: Int!
  type: Int!
  priority: Int!
  fromId: String!
  description: String!
  status: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  requestStatusHistory: [requestStatusHistory!]!
  from: user!
  users: [user!]!
}

type user {
  id: String!
  type: String!
  hubId: Int
  merchantId: Int
  name: String!
  email: String!
  phone: String!
  birthdate: Timestamp!
  refreshToken: String
  createdAt: Timestamp!
  lastModified: Timestamp!
  deletedAt: Timestamp
  userAddresses: [userAddress!]!
  financialAccounts: [financialAccount!]!
  sheetOrderStatusHistories: [sheetOrderStatusHistory!]!
  financialTransactions: [financialTransaction!]!
  requestsSent: [request!]!
  courierSheets: [courierSheet!]!
  orders: [order!]!
  requestsReceived: [request!]!
  userRoles: [UserRole!]
}

type expense {
  id: Int!
  type: String!
  fromAccountId: Int!
  amount: Int!
  receipt: String!
  comment: String!
  createdAt: Timestamp!
  fromAccount: financialAccount!
}

type financialAccount {
  id: Int!
  name: String!
  userId: String!
  merchantId: Int!
  balance: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  user: user!
  merchant: merchant!
  transactionsSent: [financialTransaction!]!
  transactionsReceived: [financialTransaction!]!
  expenses: [expense!]!
}

type merchant {
  id: Int!
  name: String!
  includesVat: Boolean!
  createdAt: Timestamp!
  lastModified: Timestamp!
  items: [item!]!
  financialAccounts: [financialAccount!]!
  orders: [order!]!
}

type itemPrice {
  id: Int!
  itemSku: String!
  currency: String!
  price: String!
  discount: String
  startDiscount: Timestamp
  endDiscount: Timestamp
  item: item!
}

type item {
  sku: String!
  merchantSku: String!
  merchantId: Int!
  name: String!
  color: String
  size: String
  description: String!
  imageUrl: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  merchant: merchant!
  itemPrices: [itemPrice!]!
  orderItems: [orderItem!]!
  bundleCount: Int!
}

type inventoryHistory {
  id: Int!
  itemInBoxId: Int!
  description: String!
  type: Int!
  amount: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  itemInBox: itemInBox!
}

type rack {
  id: Int!
  inventoryId: Int!
  levels: Int!
  name: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  ballots: [ballot!]!
}

type ballot {
  id: Int!
  rackId: Int!
  level: Int!
  name: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  boxes: [box!]!
  rack: rack!
}

type box {
  id: Int!
  ballotId: Int!
  name: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
  ballot: ballot!
  itemsInBox: [itemInBox!]!
}

type itemInBox {
  id: Int!
  itemSku: String!
  boxId: Int!
  count: Int!
  minCount: Int!
  inventoryId: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  inventoryHistory: [inventoryHistory!]!
  box: box!
  item: item!
}

type ItemPage {
  cursor: GraphqlCursor!
  data: [item!]!
}

"""Cursor scalar type for pagination"""
scalar GraphqlCursor

type ItemInBoxPage {
  cursor: GraphqlCursor!
  data: [itemInBox!]!
}

type UserRole {
  userId: String!
  roleId: Int!
  role: Role!
}

type UserPage {
  cursor: GraphqlCursor!
  data: [user!]!
}

type Role {
  id: Int!
  name: String!
  type: String!
  description: String!
  createdAt: Timestamp!
  lastModified: Timestamp!
}

type inventorySupport {
  id: Int!
  inventoryId: Int!
  governorateId: Int!
  zoneId: Int!
  inventory: inventory!
}

type inventory {
  id: Int!
  hubId: Int
  name: String!
  module: Int!
  zoneId: Int!
  location: GeoLocation!
  rentType: Int!
  createdAt: Timestamp!
  lastModified: Timestamp!
  inventoryPrices: [inventoryPrices!]!
  inventorySupports: [inventorySupport!]!
  racks: [rack!]!
  itemsCount: Int!
}

"""Geo location representation."""
scalar GeoLocation

type inventoryPrices {
  id: Int!
  inventoryId: Int!
  currency: String!
  price: String!
  discount: String
  startDiscount: Timestamp
  endDiscount: Timestamp
  inventory: inventory!
}

type Listener {
  """Example field (placeholder)"""
  exampleField: Int!
}

type EventListenObject {
  message: String!
}

type UserTokenResponse {
  user: user!
  userRoles: [UserRole!]!
  accessToken: String!
  refreshToken: String!
}

type EmailValidityPayload {
  isValid: Boolean!
  id: String
}

type Hub {
  id: Int!
  name: String!
  governorateId: Int!
  zoneId: Int!
}

type Query {
  findRoles: [Role!]!
  role(id: Int!): Role!
  paginateItemsById(itemPageInput: PaginationInput): ItemPage!
  findSingleItem(id: String!): item!
  itemPrices: [itemPrice!]!
  itemPrice(id: Int!): itemPrice!
  itemInBox(id: Int!): itemInBox!
  paginateItemInBox(input: ItemInBoxPageInput!): ItemInBoxPage!
  testCount(inventoryIds: [Int!]!): String!
  inventoryHistory(id: Int!): inventoryHistory!
  rack(id: Int!): rack!
  ballot(id: Int!): ballot!
  box(id: Int!): box!
  findAllInventories: [inventory!]!
  findOneInventory(input: FindInventoryInput!): inventory!
  inventoryPrices: [inventoryPrices!]!
  inventoryPrice(id: Int!): inventoryPrices!
  inventorySupport(id: Int!): inventorySupport!
  order(id: Int!): order!
  orderRelation(id: Int!): orderRelation!
  orderItem(id: Int!): orderItem!
  merchant(id: Int!): merchant!
  paginateUsers(paginateUsersInput: PaginationInput!): UserPage!
  request(id: Int!): request!
  userAddress(id: Int!): userAddress!
  courierSheet(id: Int!): courierSheet!
  sheetOrderStatusHistory(id: Int!): sheetOrderStatusHistory!
  sheetOrder(id: Int!): sheetOrder!
  orderStatus(id: Int!): orderStatus!
  requestStatusHistory(id: Int!): requestStatusHistory!
  financialAccount(id: Int!): financialAccount!
  expense(id: Int!): expense!
  financialTransaction(id: Int!): financialTransaction!
  financialRequestStatus(id: Int!): financalRequestStatus!
  isValidEmail(email: String!): EmailValidityPayload!
  sendToEvent: EventListenObject!
  listeners: [Listener!]!
  listener(id: Int!): Listener!
  hub(id: Int!): Hub!
}

input PaginationInput {
  isAsc: Boolean! = true
  limit: Int! = 1
  afterCursor: String
  beforeCursor: String
}

input ItemInBoxPageInput {
  isAsc: Boolean! = true
  limit: Int! = 1
  afterCursor: String
  beforeCursor: String
  inventoryIds: [Int!]
}

input FindInventoryInput {
  id: Int
  hubId: Int
}

type Mutation {
  removeUserRole(id: Int!): UserRole!
  updateUserRoles(input: UpdateUserRoleInput!): Boolean!
  updateUserRolesOptimized(input: UpdateUserRoleInputAdvanced!): Boolean!
  createRole(createRoleInput: CreateRolesInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: Int!): Role!
  createItem(createItemInput: CreateItemInput!): item!
  createFakeItem(count: Int! = 1): Boolean!
  updateItem(updateItemInput: UpdateItemInput!): item!
  removeItem(id: Int!): item!
  createItemPrice(createItemPriceInput: CreateItemPriceInput!): itemPrice!
  updateItemPrice(updateItemPriceInput: UpdateItemPriceInput!): itemPrice!
  removeItemPrice(id: Int!): itemPrice!
  createItemInBox(createItemInBoxInput: CreateItemInBoxInput!): itemInBox!
  exportItem(input: ItemCountInput!): Boolean!
  importNewItem(input: ImportItemInput!): Boolean!
  importItem(input: ItemCountInput!): Boolean!
  updateItemInBox(updateItemInBoxInput: UpdateItemInBoxInput!): itemInBox!
  removeItemInBox(id: Int!): itemInBox!
  createInventoryHistory(createInventoryHistoryInput: CreateInventoryHistoryInput!): inventoryHistory!
  updateInventoryHistory(updateInventoryHistoryInput: UpdateInventoryHistoryInput!): inventoryHistory!
  removeInventoryHistory(id: Int!): inventoryHistory!
  createRack(createRackInput: CreateRackInput!): rack!
  updateRack(updateRackInput: UpdateRackInput!): rack!
  removeRack(id: Int!): rack!
  createBallot(createBallotInput: CreateBallotInput!): ballot!
  updateBallot(updateBallotInput: UpdateBallotInput!): ballot!
  removeBallot(id: Int!): ballot!
  createBox(createBoxInput: CreateBoxInput!): box!
  updateBox(updateBoxInput: UpdateBoxInput!): box!
  removeBox(id: Int!): box!
  createFakeInventory(count: Int! = 1): Boolean!
  createInventory(input: CreateInventoryInput!): Boolean!
  updateInventory(updateInventoryInput: UpdateInventoryInput!): inventory!
  removeInventory(id: Int!): inventory!
  createInventoryPrice(createInventoryPriceInput: CreateInventoryPriceInput!): inventoryPrices!
  updateInventoryPrice(updateInventoryPriceInput: UpdateInventoryPriceInput!): inventoryPrices!
  removeInventoryPrice(id: Int!): inventoryPrices!
  createInventorySupport(createInventorySupportInput: CreateInventorySupportInput!): inventorySupport!
  updateInventorySupport(updateInventorySupportInput: UpdateInventorySupportInput!): inventorySupport!
  removeInventorySupport(id: Int!): inventorySupport!
  createOrder(createOrderInput: CreateOrderInput!): order!
  updateOrder(updateOrderInput: UpdateOrderInput!): order!
  removeOrder(id: Int!): order!
  createOrderRelation(createOrderRelationInput: CreateOrderRelationInput!): orderRelation!
  updateOrderRelation(updateOrderRelationInput: UpdateOrderRelationInput!): orderRelation!
  removeOrderRelation(id: Int!): orderRelation!
  createOrderItem(createOrderItemInput: CreateOrderItemInput!): orderItem!
  updateOrderItem(updateOrderItemInput: UpdateOrderItemInput!): orderItem!
  removeOrderItem(id: Int!): orderItem!
  createMerchant(createMerchantInput: CreateMerchantInput!): merchant!
  createFakeMerchant(count: Int! = 1): Boolean!
  updateMerchant(updateMerchantInput: UpdateMerchantInput!): merchant!
  removeMerchant(id: Int!): merchant!
  createUser(createUserInput: CreateUserInput!): Boolean!
  createFakeUser(count: Int! = 1): Boolean!
  updateUserType(updateInfo: UpdateUserTypeInput!): Boolean!
  updateMyInfo(updateInfo: UpdateUserInput!): Boolean!
  removeUser(id: Int!): user!
  createRequest(createRequestInput: CreateRequestInput!): request!
  updateRequest(updateRequestInput: UpdateRequestInput!): request!
  removeRequest(id: Int!): request!
  createUserAddress(createUserAddressInput: CreateUserAddressInput!): userAddress!
  updateUserAddress(updateUserAddressInput: UpdateUserAddressInput!): userAddress!
  removeUserAddress(id: Int!): userAddress!
  createCourierSheet(createCourierSheetInput: CreateCourierSheetInput!): courierSheet!
  updateCourierSheet(updateCourierSheetInput: UpdateCourierSheetInput!): courierSheet!
  removeCourierSheet(id: Int!): courierSheet!
  createSheetOrderStatusHistory(createSheetOrderStatusHistoryInput: CreateSheetOrderStatusHistoryInput!): sheetOrderStatusHistory!
  updateSheetOrderStatusHistory(updateSheetOrderStatusHistoryInput: UpdateSheetOrderStatusHistoryInput!): sheetOrderStatusHistory!
  removeSheetOrderStatusHistory(id: Int!): sheetOrderStatusHistory!
  createSheetOrder(createSheetOrderInput: CreateSheetOrderInput!): sheetOrder!
  updateSheetOrder(updateSheetOrderInput: UpdateSheetOrderInput!): sheetOrder!
  removeSheetOrder(id: Int!): sheetOrder!
  createOrderStatus(createOrderStatusInput: CreateOrderStatusInput!): orderStatus!
  updateOrderStatus(updateOrderStatusInput: UpdateOrderStatusInput!): orderStatus!
  removeOrderStatus(id: Int!): orderStatus!
  createRequestStatusHistory(createRequestStatusHistoryInput: CreateRequestStatusHistoryInput!): requestStatusHistory!
  updateRequestStatusHistory(updateRequestStatusHistoryInput: UpdateRequestStatusHistoryInput!): requestStatusHistory!
  removeRequestStatusHistory(id: Int!): requestStatusHistory!
  createFinancialAccount(createFinancialAccountInput: CreateFinancialAccountInput!): financialAccount!
  updateFinancialAccount(updateFinancialAccountInput: UpdateFinancialAccountInput!): financialAccount!
  removeFinancialAccount(id: Int!): financialAccount!
  createExpense(createExpenseInput: CreateExpenseInput!): expense!
  updateExpense(updateExpenseInput: UpdateExpenseInput!): expense!
  removeExpense(id: Int!): expense!
  createFinancialTransaction(createFinancialTransactionInput: CreateFinancialTransactionInput!): financialTransaction!
  updateFinancialTransaction(updateFinancialTransactionInput: UpdateFinancialTransactionInput!): financialTransaction!
  removeFinancialTransaction(id: Int!): financialTransaction!
  createFinancialRequestStatus(createFinancialRequestStatusInput: CreateFinancialRequestStatusInput!): financalRequestStatus!
  updateFinancialRequestStatus(updateFinancialRequestStatusInput: UpdateFinancialRequestStatusInput!): financalRequestStatus!
  removeFinancialRequestStatus(id: Int!): financalRequestStatus!
  requestToken(requestTokenInput: TokenRequestInput!): UserTokenResponse!
  updateListener(updateListenerInput: UpdateListenerInput!): Listener!
  removeListener(id: Int!): Listener!
  createHub(createHubInput: CreateHubInput!): Hub!
  updateHub(updateHubInput: UpdateHubInput!): Hub!
  removeHub(id: Int!): Hub!
}

input UpdateUserRoleInput {
  id: String!
  rolesToRemove: [Int!]!
  rolesToAdd: [Int!]!
}

input UpdateUserRoleInputAdvanced {
  id: String!
  roles: [Int!]!
}

input CreateRolesInput {
  roles: [Int!]!
}

input UpdateRoleInput {
  roles: [Int!]
  id: Int!
}

input CreateItemInput {
  sku: String!
  merchantSku: String
  merchantId: Int!
  name: String!
  color: String
  size: String
  description: String!
  imageUrl: String!
}

input UpdateItemInput {
  sku: String
  merchantSku: String
  merchantId: Int
  name: String
  color: String
  size: String
  description: String
  imageUrl: String
  id: Int!
}

input CreateItemPriceInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateItemPriceInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateItemInBoxInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input ItemCountInput {
  id: Int!
  count: Int!
}

input ImportItemInput {
  itemSku: String!
  inventoryId: Int!
  boxId: Int!
  count: Int!
  minCount: Int!
}

input UpdateItemInBoxInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateInventoryHistoryInput {
  itemInBoxId: Int!
  description: String!
  type: Int!
  amount: Int!
}

input UpdateInventoryHistoryInput {
  itemInBoxId: Int
  description: String
  type: Int
  amount: Int
  id: Int!
}

input CreateRackInput {
  inventoryId: Int!
  name: String!
}

input UpdateRackInput {
  inventoryId: Int
  name: String
  id: Int!
}

input CreateBallotInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateBallotInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateBoxInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateBoxInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateInventoryInput {
  name: String!
  rentType: Int!
  zoneId: Int
  hubId: Int
  module: Int
  location: GeoLocation
  numberOfRacks: Int
  rackLevel: Int
  ballotPerRack: Int
  boxPerBallot: Int
  inventoryPrices: [AddInventoryPriceInput!]
}

input AddInventoryPriceInput {
  currency: String!
  pricePerUnit: Float!
  discount: Float
  startDiscount: Timestamp
  endDiscount: Timestamp
}

input UpdateInventoryInput {
  name: String
  rentType: Int
  zoneId: Int
  hubId: Int
  module: Int
  location: GeoLocation
  numberOfRacks: Int
  rackLevel: Int
  ballotPerRack: Int
  boxPerBallot: Int
  inventoryPrices: [AddInventoryPriceInput!]
  id: Int!
}

input CreateInventoryPriceInput {
  inventoryId: Int!
  currency: String!
  pricePerUnit: Float!
  discount: Float
  startDiscount: Timestamp
  endDiscount: Timestamp
}

input UpdateInventoryPriceInput {
  inventoryId: Int
  currency: String
  pricePerUnit: Float
  discount: Float
  startDiscount: Timestamp
  endDiscount: Timestamp
  id: Int!
}

input CreateInventorySupportInput {
  inventoryId: String!
  zoneId: Int!
  governorateId: Int!
}

input UpdateInventorySupportInput {
  inventoryId: String
  zoneId: Int
  governorateId: Int
  id: Int!
}

input CreateOrderInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateOrderRelationInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderRelationInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateOrderItemInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderItemInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateMerchantInput {
  name: String!
  includesVat: Boolean!
}

input UpdateMerchantInput {
  name: String
  includesVat: Boolean
  id: Int!
}

input CreateUserInput {
  id: String
  name: String!
  email: String!
  phone: String!
  type: String!
  birthdate: Timestamp!
}

input UpdateUserTypeInput {
  id: String!
  type: String!
}

input UpdateUserInput {
  name: String
  email: String
  phone: String
  type: String
  birthdate: Timestamp
}

input CreateRequestInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateRequestInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUserAddressInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateUserAddressInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCourierSheetInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCourierSheetInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSheetOrderStatusHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSheetOrderStatusHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSheetOrderInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSheetOrderInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateOrderStatusInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateOrderStatusInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateRequestStatusHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateRequestStatusHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateFinancialAccountInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFinancialAccountInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateExpenseInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateExpenseInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateFinancialTransactionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFinancialTransactionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateFinancialRequestStatusInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFinancialRequestStatusInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input TokenRequestInput {
  firebaseToken: String!
  id: String
}

input UpdateListenerInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateHubInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateHubInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type Subscription {
  listenToEvent: EventListenObject!
}